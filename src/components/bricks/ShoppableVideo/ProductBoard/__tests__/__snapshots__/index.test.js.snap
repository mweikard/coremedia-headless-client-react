// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductBoard Component should render correctly for breakpoint below sm 1`] = `
<React.Fragment>
  <ReloadBox
    theme={
      Object {
        "breakpoints": Object {
          "min": [Function],
        },
      }
    }
  >
    <ReloadButton
      handleClick={[MockFunction handleReplay]}
    />
  </ReloadBox>
  <ProductBoardWrapper
    color="primary"
    theme={
      Object {
        "breakpoints": Object {
          "min": [Function],
        },
        "palette": Object {
          "primary": Object {
            "color": "rgb(0, 108, 174)",
            "text": "rgba(255,255,255,0.87)",
          },
          "surface": Object {
            "color": "#fff",
          },
        },
      }
    }
  >
    <Media
      defaultMatches={true}
      query="(min-width: 768px)"
    />
  </ProductBoardWrapper>
</React.Fragment>
`;

exports[`ProductBoard Component should render correctly for breakpoint below sm 2`] = `
<TransitionGroup
  childFactory={[Function]}
  component={[Function]}
  innerRef={[MockFunction handleRef]}
>
  <Transition
    appear={true}
    enter={true}
    exit={true}
    in={false}
    key="ID3"
    mountOnEnter={false}
    onEnter={[Function]}
    onEntered={[Function]}
    onEntering={[Function]}
    onExit={[Function]}
    onExited={[Function]}
    onExiting={[Function]}
    timeout={300}
    unmountOnExit={false}
  />
  <Transition
    appear={true}
    enter={true}
    exit={true}
    in={false}
    key="ID2"
    mountOnEnter={false}
    onEnter={[Function]}
    onEntered={[Function]}
    onEntering={[Function]}
    onExit={[Function]}
    onExited={[Function]}
    onExiting={[Function]}
    timeout={500}
    unmountOnExit={false}
  />
  <Transition
    appear={true}
    enter={true}
    exit={true}
    in={false}
    key="ID1"
    mountOnEnter={false}
    onEnter={[Function]}
    onEntered={[Function]}
    onEntering={[Function]}
    onExit={[Function]}
    onExited={[Function]}
    onExiting={[Function]}
    timeout={700}
    unmountOnExit={false}
  />
  <ProductBox
    index={0}
    theme={
      Object {
        "breakpoints": Object {
          "min": [Function],
        },
      }
    }
  >
    <ReloadButton
      handleClick={[MockFunction handleReplay]}
    />
  </ProductBox>
</TransitionGroup>
`;

exports[`ProductBoard Component should render correctly for breakpoint below sm 3`] = `
<ProductCard
  entered={false}
  handleClick={[MockFunction handleClick]}
  index={1}
  pictureAlt="Picture Alt 3"
  pictureLink="Link 3"
  pictureTitle="Picture Title 3"
  price={100}
  ratio="portrait_ratio5x6"
  title="Title 3"
/>
`;

exports[`ProductBoard Component should render correctly for breakpoint below sm 4`] = `
<ProductCard
  entered={false}
  handleClick={[MockFunction handleClick]}
  index={2}
  pictureAlt="Picture Alt 2"
  pictureLink="Link 2"
  pictureTitle="Picture Title 2"
  price={100}
  ratio="portrait_ratio5x6"
  title="Title 2"
/>
`;

exports[`ProductBoard Component should render correctly for breakpoint below sm 5`] = `
<ProductCard
  entered={false}
  handleClick={[MockFunction handleClick]}
  index={3}
  pictureAlt="Picture Alt 1"
  pictureLink="Link 1"
  pictureTitle="Picture Title 1"
  price={100}
  ratio="portrait_ratio5x6"
  title="Title 1"
/>
`;

exports[`ProductBoard Component should render correctly for breakpoint sm and above 1`] = `
<React.Fragment>
  <ReloadBox
    theme={
      Object {
        "breakpoints": Object {
          "min": [Function],
        },
      }
    }
  >
    <ReloadButton
      handleClick={[MockFunction handleReplay]}
    />
  </ReloadBox>
  <ProductBoardWrapper
    color="primary"
    theme={
      Object {
        "breakpoints": Object {
          "min": [Function],
        },
        "palette": Object {
          "primary": Object {
            "color": "rgb(0, 108, 174)",
            "text": "rgba(255,255,255,0.87)",
          },
          "surface": Object {
            "color": "#fff",
          },
        },
      }
    }
  >
    <Media
      defaultMatches={true}
      query="(min-width: 768px)"
    />
  </ProductBoardWrapper>
</React.Fragment>
`;

exports[`ProductBoard Component should render correctly for breakpoint sm and above 2`] = `
<TransitionGroup
  childFactory={[Function]}
  component={[Function]}
  innerRef={[MockFunction handleRef]}
  productboardOverflow={false}
>
  <Transition
    appear={true}
    enter={true}
    exit={true}
    in={false}
    key="ID1"
    mountOnEnter={false}
    onEnter={[Function]}
    onEntered={[Function]}
    onEntering={[Function]}
    onExit={[Function]}
    onExited={[Function]}
    onExiting={[Function]}
    timeout={300}
    unmountOnExit={false}
  />
  <Transition
    appear={true}
    enter={true}
    exit={true}
    in={false}
    key="ID2"
    mountOnEnter={false}
    onEnter={[Function]}
    onEntered={[Function]}
    onEntering={[Function]}
    onExit={[Function]}
    onExited={[Function]}
    onExiting={[Function]}
    timeout={500}
    unmountOnExit={false}
  />
  <Transition
    appear={true}
    enter={true}
    exit={true}
    in={false}
    key="ID3"
    mountOnEnter={false}
    onEnter={[Function]}
    onEntered={[Function]}
    onEntering={[Function]}
    onExit={[Function]}
    onExited={[Function]}
    onExiting={[Function]}
    timeout={700}
    unmountOnExit={false}
  />
</TransitionGroup>
`;

exports[`ProductBoard Component should render correctly for breakpoint sm and above 3`] = `
<ProductCard
  entered={false}
  handleClick={[MockFunction handleClick]}
  index={0}
  pictureAlt="Picture Alt 1"
  pictureLink="Link 1"
  pictureTitle="Picture Title 1"
  price={100}
  ratio="portrait_ratio5x6"
  title="Title 1"
/>
`;

exports[`ProductBoard Component should render correctly for breakpoint sm and above 4`] = `
<ProductCard
  entered={false}
  handleClick={[MockFunction handleClick]}
  index={1}
  pictureAlt="Picture Alt 2"
  pictureLink="Link 2"
  pictureTitle="Picture Title 2"
  price={100}
  ratio="portrait_ratio5x6"
  title="Title 2"
/>
`;

exports[`ProductBoard Component should render correctly for breakpoint sm and above 5`] = `
<ProductCard
  entered={false}
  handleClick={[MockFunction handleClick]}
  index={2}
  pictureAlt="Picture Alt 3"
  pictureLink="Link 3"
  pictureTitle="Picture Title 3"
  price={100}
  ratio="portrait_ratio5x6"
  title="Title 3"
/>
`;
